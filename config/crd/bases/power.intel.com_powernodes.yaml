
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: powernodes.power.intel.com
spec:
  group: power.intel.com
  names:
    kind: PowerNode
    listKind: PowerNodeList
    plural: powernodes
    singular: powernode
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: PowerNode is the Schema for the powernodes API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: PowerNodeSpec defines the desired state of PowerNode
          properties:
            nodeName:
              description: NodeName is the name of the node
              type: string
          type: object
        status:
          description: PowerNodeStatus defines the observed state of PowerNode
          properties:
            guaranteedPods:
              items:
                properties:
                  containers:
                    items:
                      properties:
                        exclusiveCpus:
                          items:
                            type: string
                          type: array
                        id:
                          type: string
                        name:
                          type: string
                      type: object
                    type: array
                  name:
                    type: string
                  profile:
                    description: Profile is the Schema for the profiles API
                    properties:
                      apiVersion:
                        description: 'APIVersion defines the versioned schema of this
                          representation of an object. Servers should convert recognized
                          schemas to the latest internal value, and may reject unrecognized
                          values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                        type: string
                      kind:
                        description: 'Kind is a string value representing the REST
                          resource this object represents. Servers may infer this
                          from the endpoint the client submits requests to. Cannot
                          be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      metadata:
                        type: object
                      spec:
                        description: ProfileSpec defines the desired state of Profile
                        properties:
                          cstate:
                            description: 'TODO: determine exactly what cstate is for'
                            type: boolean
                          max:
                            description: Max is the maximum frequency that the core
                              is allowed to go up to
                            type: integer
                          min:
                            description: Min is the minimum frequency that the core
                              is allowed to drop to
                            type: integer
                          name:
                            description: Name is the name identifying the profile
                            type: string
                        required:
                        - cstate
                        - max
                        - min
                        - name
                        type: object
                      status:
                        description: ProfileStatus defines the observed state of Profile
                        type: object
                    type: object
                  uid:
                    type: string
                type: object
              type: array
            sharedPool:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
